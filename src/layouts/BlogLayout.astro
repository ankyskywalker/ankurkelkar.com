---
import "../styles/global.css";
import BaseLayout from "./BaseLayout.astro";

export interface Props {
  title: string;
  date: Date;
  description: string;
  tags?: string[];
  readTime?: string;
  part?: string;
}

const { 
  title, 
  date, 
  description, 
  tags = [], 
  readTime,
  part 
} = Astro.props;
---

<BaseLayout title={title}>
  <article class="container mx-auto px-4 py-12">
    <div class="prose prose-invert lg:prose-xl max-w-4xl mx-auto">
      <!-- Article Header -->
      <header class="text-center mb-12">
        <div class="flex justify-center space-x-4 text-sm text-gray-400 mb-4">
          <time datetime={date.toISOString()}>
            {date.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}
          </time>
          <span>•</span>
          <span>{readTime}</span>
          {part && (
            <>
              <span>•</span>
              <span class="text-pink-400 font-semibold">{part}</span>
            </>
          )}
        </div>
        
        <h1 class="text-4xl md:text-5xl font-black bg-clip-text text-transparent bg-gradient-to-r from-indigo-400 via-pink-400 to-yellow-200 mb-6 leading-tight">
          {title}
        </h1>
        
        <p class="text-xl text-gray-300 max-w-3xl mx-auto mb-8">
          {description}
        </p>

        {tags.length > 0 && (
          <div class="flex flex-wrap justify-center gap-3 mb-8">
            {tags.map((tag) => (
              <span class="px-3 py-1 bg-indigo-600/30 rounded-full text-indigo-300 text-sm font-medium">
                {tag}
              </span>
            ))}
          </div>
        )}
      </header>

      <!-- Article Content -->
      <div class="bg-slate-800/60 backdrop-blur-md rounded-2xl p-8 shadow-xl border border-gray-700/30">
        <div class="prose-content text-gray-200 leading-relaxed space-y-6">
          <slot />
        </div>
        
        <!-- Navigation -->
        <div class="flex justify-between mt-12 pt-8 border-t border-gray-700">
          <div class="flex items-center space-x-4">
            {tags.length > 0 && (
              <div class="flex flex-wrap gap-2">
                <span class="text-sm text-gray-400">Tags:</span>
                {tags.map((tag) => (
                  <span class="px-2 py-1 bg-gray-700/50 rounded text-xs text-gray-300">
                    {tag}
                  </span>
                ))}
              </div>
            )}
          </div>
          <a href="/blog" class="inline-flex items-center text-pink-400 hover:text-pink-300 font-medium transition-colors">
            ← Back to Blog
          </a>
        </div>
      </div>
    </div>
  </article>
</BaseLayout>